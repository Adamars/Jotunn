name: Create DLL on PR
"on": pull_request
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install SteamCMD
        uses: CyberAndrii/setup-steamcmd@v1

      # Install NuGet
      - uses: nuget/setup-nuget@v1
        name: Install NuGet

      # Get build commands
      - name: Get build commands
        run: |
          sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
          echo "deb https://download.mono-project.com/repo/ubuntu stable-bionic main" | sudo tee /etc/apt/sources.list.d/mono-official-stable.list
          wget https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
          sudo dpkg -i packages-microsoft-prod.deb
          sudo apt-get update
          sudo apt-get install -y mono-roslyn mono-complete mono-dbg msbuild unzip dirmngr dotnet-sdk-5.0 dotnet-runtime-5.0

      # Install NuGet dependencies
      - name: Install NuGet dependencies
        run: |
          nuget restore JotunnLib.sln
          dotnet restore JotunnLib/JotunnLib.csproj

      # Prepare Valheim dependencies
      - name: Prepare Valheim dependencies
        run: |
          wget -O bepinex.zip "https://valheim.thunderstore.io/package/download/denikson/BepInExPack_Valheim/5.4.800/"
          unzip bepinex.zip -d ~/BepInExRaw
          steamcmd +login anonymous +force_install_dir ~/VHINSTALL +app_update 896660 validate +exit
          mv ~/VHINSTALL/valheim_server_Data/ ~/VHINSTALL/valheim_Data/
          mv ~/BepInExRaw/BepInExPack_Valheim/* ~/VHINSTALL/

      - name: Set references to DLLs
        run: |
          echo "<?xml version=\"1.0\" encoding=\"utf-8\"?><Project ToolsVersion=\"Current\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\"><PropertyGroup><VALHEIM_INSTALL>$HOME/VHINSTALL/</VALHEIM_INSTALL></PropertyGroup></Project>" > Environment.props

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.x'
          
      # Build DLLs
      - name: Build solution
        run: |
          msbuild JotunnLib.sln /p:Configuration=Debug

      # Upload artifact
      - uses: actions/upload-artifact@v2
        with:
          name: JotunnLib-dev-pr-${{ github.event.number }}.dll
          path: JotunnLib/bin/Debug/net462/JotunnLib.dll
