using System.IO;
using System.Linq;
using System.Text;
using Jotunn.Entities;
using Jotunn.Managers;
using UnityEngine;

namespace JotunnDoc.Docs
{
    public class ItemDoc : Doc
    {
        public ItemDoc() : base("objects/item-list.md")
        {
            ItemManager.OnItemsRegistered += () => JotunnDoc.StartDelayed(DocItems);
        }

        private void DocItems()
        {
            if (Generated)
            {
                return;
            }

            Jotunn.Logger.LogInfo("Documenting items");

            AddHeader(1, "Item list");
            AddText("All of the items currently in the game, with English localizations applied");
            AddText($"This file is automatically generated from Valheim {Version.GetVersionString(true)} using the JotunnDoc mod found on our GitHub.");
            AddTableHeader("Item", "Token", "Name", "Type", "Description");
            
            var imageDirectory = Path.Combine(DocumentationDirConfig.Value, "images/items");
            Directory.CreateDirectory(imageDirectory);

            foreach (GameObject obj in ObjectDB.instance.m_items.Where(x => !CustomItem.IsCustomItem(x.name)))
            {
                ItemDrop item = obj.GetComponent<ItemDrop>();
                ItemDrop.ItemData.SharedData shared = item.m_itemData.m_shared;
                
                bool hasSprite = RequestSprite(Path.Combine(imageDirectory, $"{obj.name}.png"), obj, RenderManager.IsometricRotation);

                AddTableRow(
                    GetNameBox(obj.name, hasSprite),
                    shared.m_name,
                    JotunnDoc.Localize(shared.m_name),
                    shared.m_itemType.ToString(),
                    JotunnDoc.Localize(shared.m_description));
            }

            Save();
        }
        private static string GetNameBox(string name, bool hasSprite)
        {
            StringBuilder sb = new StringBuilder(name);
            if (hasSprite)
            {
                sb.Append($"<br><img src=\"../../images/items/{name}.png\">");
            }
            return sb.ToString();
        }
    }
}
