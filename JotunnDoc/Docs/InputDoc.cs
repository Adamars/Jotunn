using System.Collections.Generic;
using System.Linq;
using System.Reflection;
using Jotunn.Configs;
using Jotunn.Managers;
using Jotunn.Utils;
using UnityEngine.SceneManagement;

namespace JotunnDoc.Docs
{
    public class InputDoc : Doc
    {
        public InputDoc() : base("input/input-list.md")
        {
            SceneManager.sceneLoaded += DocInputs;
        }

        public void DocInputs(Scene scene, LoadSceneMode mode)
        {
            if (Generated)
            {
                return;
            }

            if (scene.name != "main")
            {
                return;
            }

            Jotunn.Logger.LogInfo("Documenting inputs");

            AddHeader(1, "Input list");
            AddText("All of the inputs currently in the game, and their default values.");
            AddText($"This file is automatically generated from Valheim {Version.GetVersionString(true)} using the JotunnDoc mod found on our GitHub.");
            AddTableHeader("Name", "Keycode", "Axis", "Gamepad");

            var buttons = ZInput.instance.m_buttons;
            var jotunnButtons = GetStaticPrivateField<Dictionary<string, ButtonConfig>>(InputManager.Instance, "Buttons");

            foreach (var pair in buttons.Where(x => !jotunnButtons.ContainsKey(x.Key)))
            {
                ZInput.ButtonDef button = pair.Value;
                AddTableRow(pair.Key, button.m_key.ToString(), button.m_axis, button.m_gamepad.ToString());
            }

            Save();
        }

        public static T GetStaticPrivateField<T>(object instance, string name)
        {
            FieldInfo var = instance.GetType().GetField(name, BindingFlags.NonPublic | BindingFlags.Static);

            if (var == null)
            {
                return default(T);
            }

            return (T)var.GetValue(instance);
        }
    }
}
